/*
 * Espace.h
 *
 *  Created on: 17 oct. 2008
 *      Author: Aurélien
 */

#ifndef ESPACE_H_
#define ESPACE_H_

#include "drivers/TimerSpaceInvaders.h"
#include "Entites/EntiteVide.h"
#include "FondEspace.h"

/*
 * Classe Espace.
 * Permet de réferencer les entités présentes dans ce niveau.
 * Tout réferencement ou demande de réferencement d'entité doit s'effectuer
 * dans la zone allouable de l'espace, c'est à dire :
 * 			Ligne : [1; 25]
 * 			Colonne : [0; 80]
 */
class Espace {

private:
	/*
	 * Espace dans lequel évoluent les entités du jeu.
	 * C'est un tableau linéarisé. (ligne, colonne) est placé à l'adresse
	 * [ligne*LARGEUR + colonne).
	 */
	EntiteBase *espace[LARGEUR*HAUTEUR];	//Linéarisation du tableau.
	Ecran *ecran;

	TimerSpaceInvaders *timer;

	/*
	 * Tronche de l'espace, couleur d'arrière, de premier plan, et image de fond.
	 */
	FondEspace *fondEspace;

public:

	Espace(FondEspace *fondEspace, Ecran *ecran, TimerSpaceInvaders *timer);

	/*Retourne la couleur d'arrière plan de l'espace. */
	Couleur getCouleurArPlan();

	/*Retourne la couleur d'avant plan de l'espace.*/
	Couleur getCouleurPrPlan(int ligne, int colonne);


	/*
	 * Retourne l'entité occupant la zone spécifiée par (ligne, colonne).
	 */
	EntiteBase *getEntite(int ligne, int colonne);

	/*
	 * Fixe l'entité présente dans la zone spécifiée par (ligne, colonne).
	 */
	void setEntite(EntiteBase *entite, int ligne, int colonne);
	/*
	 * Lie l'entité à l'espace.
	 * Effectue la liaison pour chacune des cases de l'espace concernée.
	 */
	void setEntite(EntiteBase *entite);

	/*
	 * Place une entité vide dans la zone spécifiée par (ligne, colonne).
	 */
	void setEntiteVide(int ligne, int colonne);
	/*
	 * Supprime tous les liens de l'entité dans l'espace.
	 */
	void supprimerEntite(EntiteBase *entite);

	/*
	 * Place une entité vide dans la zone spécifiée par (ligne, colonne).
	 */
	void remplirEspaceVide();
	/*
	 * Redessine l'espace complet.
	 * Redessine les entités présentes dans chacune des cases de l'espace.
	 */
	void redessinerEspace();
};

#endif /* ESPACE_H_ */
