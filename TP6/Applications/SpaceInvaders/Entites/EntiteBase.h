/*
 * Entite.h
 *
 *  Created on: 17 oct. 2008
 *      Author: Aurélien
 */

#ifndef ENTITE_BASE_H_
#define ENTITE_BASE_H_

#include <drivers/Ecran.h>
#include <sextant/types.h>
#include <sextant/memoire/memoire.h>	//Gestion de la mémoire
#include "Applications/SpaceInvaders/ConfigSpaceInvader.h"

class Espace;

/*
 * Classe entite : superclasse de toutes les entités de Space Invaders.
 * Si une entité se déplace alors qu'une autre lui est contiguë, des
 * erreurs peuvent survenir. (pas de sécurité sur l'ecrasement)
 */
class EntiteBase {

protected:
	/*
	 * Points de vie de l'entité. Lorsqu'ils sont mis à zéro, l'entité est effacée.
	 */
	int vie;
	/*
	 * Représentation de l'affichage. (Sprite)
	 * Hauteur, largeur et couleur de premier plan du sprite.
	 */
	char *affichage;
	int hauteur;
	int largeur;
	Couleur couleur;

	/*
	 * Position verticale et horizontale de l'entité.
	 */
	int positionLigne;
	int positionColonne;

	/*
	 * Espace lié aux entités. Permet de suivre l'évolution des entités.
	 */
	static Espace* espace;
	static Ecran* ecran;

	/*
	 * Constructeur d'une entité. Passage par factory.
	 */
	EntiteBase(int vie, int positionLigne, int positionColonne,
			char *affichage, int hauteur, int largeur, Couleur couleur);

public:

	/*
	 * Accesseurs simples.
	 * Retourne la position de l'entité dans l'espace, et ses dimensions.
	 */
	int getPositionLigne();
	int getPositionColonne();

	int getHauteur();
	int getLargeur();

	/*
	 * Inflige des dégats à l'entité.
	 */
	virtual void infligerDegats(int degat) {};
	/*
	 * Teste si l'entité est une entité vide.
	 * Retourne false par défaut. Cette méthode n'est réécrite que pour la classe
	 * EntiteVide.
	 */
	virtual bool estEntiteVide();

	/*
	 * Déplace l'entité dans une des directions. (Voir ConfigSpaceInvader)
	 * Met à jour l'affichage en même temps.
	 */
	void deplacer(int direction);

	/*
	 * Force le dessin de l'entité et la lie à l'espace. Opération
	 * effectuée automatiquement lors du déplacement de l'entité.
	 */
	void dessiner();
	/*
	 * Force l'effacement du dessin de l'entité et la lie à l'espace.
	 * Opération effectuée automatiquement lors du déplacement de l'entité
	 * ou de sa suppression.
	 */
	void effacer();

	/*
	 * Fixe le paramètre statique ecran de toutes les entités.
	 * Méthode appelée une seule fois au chargement du jeu.
	 */
	static void setEcran(Ecran *ecran);
	/*
	 * Fixe le paramètre statique espace de toutes les entités.
	 * Méthode appelée à chaque nouveau niveau du jeu.
	 */
	static void setEspace(Espace *espace);
};

#endif /* ENTITE_BASE_H_ */
