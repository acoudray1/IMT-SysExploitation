/*
 * TimerSpaceInvaders.cpp
 *
 *  Created on: 27 oct. 2008
 *      Author: Aurélien
 */

#include "TimerSpaceInvaders.h"

extern Semaphore semaphoreTicHandler;
extern bool modifTic;

TimerSpaceInvaders::TimerSpaceInvaders(int tma, int tmc, int tda) {
	missileAliens = new Semaphore();
	missileCanon = new Semaphore();
	deplacementAliens = new Semaphore();

	timerMissileAliens = tma;
	timerMissilesCanon = tmc;
	timerDeplacementAliens = tda;
}

void TimerSpaceInvaders::handler(Ecran *ecran){
	//La boucle devrait être mise ici. Le sémaphore devrait garantir
	//la mise à jour à chaque interruption..

	while(true){
		while(!modifTic);
		modifTic = false;
		semaphoreTicHandler.P();

		if(compteurTicHandler%timerDeplacementAliens == 0){
			deplacementAliens->V();
		}
		if(compteurTicHandler%timerMissileAliens == 0){
			missileAliens->V();
		}
		if(compteurTicHandler%timerMissilesCanon == 0){
			missileCanon->V();
		}
//		if(compteurTicHandler<10){
//			ecran->afficherChiffre(2, 4, compteurTicHandler);
//		} else if(compteurTicHandler<100){
//			ecran->afficherChiffre(2, 3, compteurTicHandler);
//		} else if(compteurTicHandler<1000){
//			ecran->afficherChiffre(2, 2, compteurTicHandler);
//		} else if(compteurTicHandler<10000){
//			ecran->afficherChiffre(2, 1, compteurTicHandler);
//		} else {
//			ecran->afficherChiffre(2, 0, compteurTicHandler);
//		}
//
//		ecran->afficherChiffre(4, 4, compteurTicHandler%timerDeplacementAliens);
//		ecran->afficherChiffre(5, 4, deplacementAliens->Valeur());
//		ecran->afficherChiffre(6, 4, getTicHandler()->Valeur());

	}
}

Semaphore *TimerSpaceInvaders::getMissileAliens(){
	return missileAliens;
}
Semaphore *TimerSpaceInvaders::getMissileCanon(){
	return missileCanon;
}
Semaphore *TimerSpaceInvaders::getDeplacementAliens(){
	return deplacementAliens;
}


void TimerSpaceInvaders::setTimerMissileAliens(int ms){
	timerMissileAliens = ms;
}
void TimerSpaceInvaders::setTimerMissileCanon(int ms){
	timerMissilesCanon = ms;
}
void TimerSpaceInvaders::setTimerDeplacementAliens(int ms){
	timerDeplacementAliens = ms;
}

